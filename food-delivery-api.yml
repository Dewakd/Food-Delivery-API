openapi: '3.0.3'
info:
  title: Food Delivery API
  version: '1.0'
servers:
  - url: http://localhost:3000/api/v1

tags:
  - name: Users
    description: User management operations
  - name: Restaurants
    description: Restaurant listing and menu management
  - name: Cart
    description: Shopping cart operations

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          minLength: 3
          maxLength: 50
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 6
        fullName:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - username
        - email
        - password
    
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        createdAt:
          type: string
          format: date-time

    Restaurant:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        image:
          type: string
          format: uri
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
    
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        restaurantId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        image:
          type: string
          format: uri
    
    CartItem:
      type: object
      properties:
        menuItemId:
          type: integer
          format: int64
        quantity:
          type: integer
          minimum: 1
        price:
          type: number
          format: float
        name:
          type: string
    
    Cart:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        totalAmount:
          type: number
          format: float

paths:
  /users:
    post:
      tags:
        - Users
      summary: Create a new user
      description: Register a new user in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid input
        '409':
          description: Username or email already exists
    
    get:
      tags:
        - Users
      summary: Get all users
      description: Returns a list of all registered users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
  
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Returns a single user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
    
    put:
      tags:
        - Users
      summary: Update user
      description: Update an existing user's information
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                phoneNumber:
                  type: string
                address:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
        '400':
          description: Invalid input
    
    delete:
      tags:
        - Users
      summary: Delete user
      description: Delete a user from the system
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

  /restaurants:
    get:
      tags:
        - Restaurants
      summary: Get all restaurants
      description: Returns a list of all available restaurants
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
    
    post:
      tags:
        - Restaurants
      summary: Add a new restaurant
      description: Add a new restaurant to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
                image:
                  type: string
                  format: uri
                rating:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 5
      responses:
        '201':
          description: Restaurant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '400':
          description: Invalid input
  
  /restaurants/{restaurantId}/menu:
    get:
      tags:
        - Restaurants
      summary: Get restaurant menu
      description: Returns the menu items for a specific restaurant
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
        '404':
          description: Restaurant not found

    post:
      tags:
        - Restaurants
      summary: Add menu item to restaurant
      description: Add a new menu item to a specific restaurant
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                  minimum: 0
                image:
                  type: string
                  format: uri
      responses:
        '201':
          description: Menu item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '400':
          description: Invalid input
        '404':
          description: Restaurant not found

  /cart:
    get:
      tags:
        - Cart
      summary: Get current cart
      description: Returns the current shopping cart with items and total
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    
    post:
      tags:
        - Cart
      summary: Add item to cart
      description: Add a menu item to the shopping cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menuItemId:
                  type: integer
                  format: int64
                quantity:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Item added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Menu item not found
    
    put:
      tags:
        - Cart
      summary: Update cart item quantity
      description: Update the quantity of an item in the cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menuItemId:
                  type: integer
                  format: int64
                quantity:
                  type: integer
                  minimum: 0
      responses:
        '200':
          description: Cart updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Item not found in cart
    
    delete:
      tags:
        - Cart
      summary: Clear cart
      description: Remove all items from the cart
      responses:
        '200':
          description: Cart cleared successfully

